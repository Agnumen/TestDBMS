from typing import Protocol, TypeVar, Generic, Optional
# from sqlalchemy.ext.asyncio import AsyncSession

T = TypeVar('T')

class IRepository(Protocol, Generic[T]):
    async def get_by_id(self, id: int) -> Optional[T]: ...
    async def create(self, entity: T) -> T: ...
    async def update(self, entity: T) -> None: ...
    async def delete(self, entity: T) -> None: ...